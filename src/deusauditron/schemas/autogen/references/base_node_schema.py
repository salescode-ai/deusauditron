# generated by datamodel-codegen:
#   filename:  references/base_node.schema.json

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, ConfigDict

from . import position_schema


class Type(Enum):
    LLMNode = "LLMNode"
    CodeNode = "CodeNode"
    VectorStoreNode = "VectorStoreNode"


class BaseNodeConfig(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    name: str
    type: Type
    description: Optional[str] = None
    position: Optional[position_schema.Position] = None
    pre_callback: Optional[str] = None
    post_callback: Optional[str] = None
    emit_output: Optional[bool] = None
